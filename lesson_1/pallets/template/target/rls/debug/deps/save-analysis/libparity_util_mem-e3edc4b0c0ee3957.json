{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0","program":"/Users/hao/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","parity_util_mem","--edition=2018","/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"hashbrown\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"primitive-types\"","--cfg","feature=\"std\"","-C","metadata=e3edc4b0c0ee3957","-C","extra-filename=-e3edc4b0c0ee3957","--out-dir","/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps","-L","dependency=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps","--extern","cfg_if=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libcfg_if-b341338ab5d84762.rmeta","--extern","hashbrown=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libhashbrown-3e36662e951521a0.rmeta","--extern","impl_trait_for_tuples=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libimpl_trait_for_tuples-1e62228a0e034022.dylib","--extern","parity_util_mem_derive=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libparity_util_mem_derive-7802a89bf3e134f3.dylib","--extern","parking_lot=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libparking_lot-af4e1c5926927c01.rmeta","--extern","primitive_types=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libprimitive_types-0b77ef9b33420832.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/hao/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libparity_util_mem-e3edc4b0c0ee3957.rmeta"},"prelude":{"crate_id":{"name":"parity_util_mem","disambiguator":[5809116903985876306,14158676002230908251]},"crate_root":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src","external_crates":[{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16841035755873987138,8908851700613744445]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2926027659608477847,13266562012387424727]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16543572953398241612,13462986764070019698]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8178771900672787435,15547668090406144857]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9156920429250817125,11075234384113967897]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[11279596189188458369,12350340105194636324]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7312015018221179255,4742041386565820272]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15891109833083679534,17984379632392221749]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16902119159609667480,6524026496945547584]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3621897933862434564,16562186117073056480]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[15536936008295295249,10906270311338372224]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10382820985286059075,14577866580883878825]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14597332125720628794,2125191253906842166]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8450432001629562665,933745348923591991]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16715270918519391585,15765631768114097577]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[3555059470230282113,9390402421115331706]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":17,"id":{"name":"primitive_types","disambiguator":[1666979569465101156,12774793809408488845]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":18,"id":{"name":"fixed_hash","disambiguator":[14859117202573941552,12410659943152693026]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":19,"id":{"name":"static_assertions","disambiguator":[2457103292964434045,11157123979498689585]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":20,"id":{"name":"byteorder","disambiguator":[15204339809225635029,7388579149518174050]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":21,"id":{"name":"rustc_hex","disambiguator":[12130226214522788324,149424593449194009]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":22,"id":{"name":"rand","disambiguator":[6140530642430359294,3505253419696211055]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":23,"id":{"name":"rand_core","disambiguator":[11679689446711882041,15697039053615341510]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":24,"id":{"name":"getrandom","disambiguator":[17456250068937214157,10220211497176331784]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":25,"id":{"name":"cfg_if","disambiguator":[11158084692184962471,12185878372230750563]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":26,"id":{"name":"libc","disambiguator":[8408077373994783170,13051148311648355700]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":27,"id":{"name":"rand_chacha","disambiguator":[9768240473132757375,8271380216128345948]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":28,"id":{"name":"ppv_lite86","disambiguator":[9543165017316146690,4553697136210033367]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":29,"id":{"name":"uint","disambiguator":[10368049799069140156,4895546306340104327]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":30,"id":{"name":"hex","disambiguator":[10309083460089850368,5529099788247037443]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":31,"id":{"name":"crunchy","disambiguator":[8008404410926411377,14572539584830108260]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":32,"id":{"name":"impl_serde","disambiguator":[11129541681974606027,9688703408052213201]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":33,"id":{"name":"serde","disambiguator":[2066183734022728860,3168566282548401161]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":34,"id":{"name":"serde_derive","disambiguator":[17439753355787619812,9235288723232798023]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":35,"id":{"name":"impl_codec","disambiguator":[4092706628566794453,11684981851110066355]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":36,"id":{"name":"parity_scale_codec","disambiguator":[11928373191497758672,1641820410704555505]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":37,"id":{"name":"parity_scale_codec_derive","disambiguator":[720558869561536122,10362089588301474101]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":38,"id":{"name":"arrayvec","disambiguator":[14129922488301288610,17506012598060559310]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","num":39,"id":{"name":"byte_slice_cast","disambiguator":[11196174348507219991,6555969724472170837]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","num":40,"id":{"name":"impl_trait_for_tuples","disambiguator":[12391801246454407389,154514259672981849]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","num":41,"id":{"name":"parity_util_mem_derive","disambiguator":[8836695746460547087,14401522620278090745]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","num":42,"id":{"name":"parking_lot","disambiguator":[16154125520130077868,12438378832271529634]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","num":43,"id":{"name":"instant","disambiguator":[9557348853919165323,2157178867518543181]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","num":44,"id":{"name":"lock_api","disambiguator":[14251985799452023082,7181950131503270685]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","num":45,"id":{"name":"scopeguard","disambiguator":[2529914620654078643,4817416488441989513]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","num":46,"id":{"name":"parking_lot_core","disambiguator":[11113167263741901826,16131032256511391119]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","num":47,"id":{"name":"smallvec","disambiguator":[16857072093849855746,12777979551817942725]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","num":48,"id":{"name":"hashbrown","disambiguator":[1841890765748134074,2810553404501966004]}},{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","num":49,"id":{"name":"ahash","disambiguator":[9127756577553639441,2316833870354681055]}}],"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":342,"byte_end":2942,"line_start":9,"line_end":98,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2145,"byte_end":2160,"line_start":66,"line_end":66,"column_start":21,"column_end":36},"alias_span":null,"name":"MallocSizeOfExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2184,"byte_end":2203,"line_start":67,"line_end":67,"column_start":23,"column_end":42},"alias_span":null,"name":"MallocShallowSizeOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2205,"byte_end":2217,"line_start":67,"line_end":67,"column_start":44,"column_end":56},"alias_span":null,"name":"MallocSizeOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2219,"byte_end":2234,"line_start":67,"line_end":67,"column_start":58,"column_end":73},"alias_span":null,"name":"MallocSizeOfOps","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2270,"byte_end":2271,"line_start":69,"line_end":69,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":342,"byte_end":2942,"line_start":9,"line_end":98,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":31},{"krate":0,"index":66},{"krate":0,"index":262},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":296}],"decl_id":null,"docs":" Crate for parity memory management related utilities.\n It includes global allocator choice, heap measurement and\n memory erasure.\n","sig":null,"attributes":[{"value":"/ Crate for parity memory management related utilities.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":342,"byte_end":399,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/ It includes global allocator choice, heap measurement and","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":400,"byte_end":461,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/ memory erasure.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":462,"byte_end":481,"line_start":11,"line_end":11,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocators","qualname":"::allocators","value":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28}],"decl_id":null,"docs":" default allocator management\n Features are:\n - windows:\n\t - no features: default implementation from servo `heapsize` crate\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - jemalloc: default windows allocator is used instead\n\t - mimalloc: use mimallocator crate\n - arch x86:\n\t - no features: use default alloc\n\t - jemalloc: use jemallocator crate\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - mimalloc: use mimallocator crate\n - arch x86/macos:\n\t - no features: use default alloc, requires using `estimate_size`\n\t - jemalloc: use jemallocator crate\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - mimalloc: use mimallocator crate\n - arch wasm32:\n\t - no features: default to `estimate_size`\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - jemalloc: compile error\n\t - mimalloc: compile error (until https://github.com/microsoft/mimalloc/pull/32 is merged)\n","sig":null,"attributes":[{"value":"/ default allocator management","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3286,"byte_end":3318,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/ Features are:","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3319,"byte_end":3336,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/ - windows:","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3337,"byte_end":3351,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/\t - no features: default implementation from servo `heapsize` crate","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3352,"byte_end":3422,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/\t - weealloc: default to `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3423,"byte_end":3466,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/\t - dlmalloc: default to `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3467,"byte_end":3510,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/\t - jemalloc: default windows allocator is used instead","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3511,"byte_end":3569,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/\t - mimalloc: use mimallocator crate","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3570,"byte_end":3609,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ - arch x86:","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3610,"byte_end":3625,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/\t - no features: use default alloc","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3626,"byte_end":3663,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/\t - jemalloc: use jemallocator crate","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3664,"byte_end":3703,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/\t - weealloc: default to `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3704,"byte_end":3747,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/\t - dlmalloc: default to `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3748,"byte_end":3791,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/\t - mimalloc: use mimallocator crate","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3792,"byte_end":3831,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ - arch x86/macos:","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3832,"byte_end":3853,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/\t - no features: use default alloc, requires using `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3854,"byte_end":3923,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/\t - jemalloc: use jemallocator crate","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3924,"byte_end":3963,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/\t - weealloc: default to `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":3964,"byte_end":4007,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/\t - dlmalloc: default to `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":4008,"byte_end":4051,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/\t - mimalloc: use mimallocator crate","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":4052,"byte_end":4091,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ - arch wasm32:","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":4092,"byte_end":4110,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/\t - no features: default to `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":4111,"byte_end":4157,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/\t - weealloc: default to `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":4158,"byte_end":4201,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/\t - dlmalloc: default to `estimate_size`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":4202,"byte_end":4245,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/\t - jemalloc: compile error","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":4246,"byte_end":4276,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/\t - mimalloc: compile error (until https://github.com/microsoft/mimalloc/pull/32 is merged)","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":4277,"byte_end":4371,"line_start":34,"line_end":34,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":6966,"byte_end":6985,"line_start":125,"line_end":125,"column_start":8,"column_end":27},"name":"new_malloc_size_ops","qualname":"::allocators::new_malloc_size_ops","value":"pub fn new_malloc_size_ops() -> MallocSizeOfOps","parent":null,"children":[],"decl_id":null,"docs":" Get a new instance of a MallocSizeOfOps\n","sig":null,"attributes":[{"value":"/ Get a new instance of a MallocSizeOfOps","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":6915,"byte_end":6958,"line_start":124,"line_end":124,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7330,"byte_end":7345,"line_start":133,"line_end":133,"column_start":11,"column_end":26},"name":"MallocSizeOfExt","qualname":"::allocators::MallocSizeOfExt","value":"MallocSizeOfExt: MallocSizeOf","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" Extension methods for `MallocSizeOf` trait, do not implement\n directly.\n It allows getting heapsize without exposing `MallocSizeOfOps`\n (a single default `MallocSizeOfOps` is used for each call).\n","sig":null,"attributes":[{"value":"/ Extension methods for `MallocSizeOf` trait, do not implement","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7111,"byte_end":7175,"line_start":129,"line_end":129,"column_start":1,"column_end":65}},{"value":"/ directly.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7176,"byte_end":7189,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/ It allows getting heapsize without exposing `MallocSizeOfOps`","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7190,"byte_end":7255,"line_start":131,"line_end":131,"column_start":1,"column_end":66}},{"value":"/ (a single default `MallocSizeOfOps` is used for each call).","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7256,"byte_end":7319,"line_start":132,"line_end":132,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7436,"byte_end":7450,"line_start":136,"line_end":136,"column_start":5,"column_end":19},"name":"malloc_size_of","qualname":"::allocators::MallocSizeOfExt::malloc_size_of","value":"pub fn malloc_size_of(&Self) -> usize","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Method to launch a heapsize measurement with a\n fresh state.\n","sig":null,"attributes":[{"value":"/ Method to launch a heapsize measurement with a","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7363,"byte_end":7413,"line_start":134,"line_end":134,"column_start":2,"column_end":52}},{"value":"/ fresh state.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7415,"byte_end":7431,"line_start":135,"line_end":135,"column_start":2,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sizeof","qualname":"::sizeof","value":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":63}],"decl_id":null,"docs":" Estimation for heapsize calculation. Usable to replace call to allocator method (for some\n allocators or simply because we just need a deterministic cunsumption measurement).\n","sig":null,"attributes":[{"value":"cfg(any(all(target_os = \"macos\", not(feature = \"jemalloc-global\"),), feature\n          = \"estimate-heapsize\"))","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":1416,"byte_end":1519,"line_start":49,"line_end":49,"column_start":1,"column_end":104}},{"value":"/ Estimation for heapsize calculation. Usable to replace call to allocator method (for some","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":8134,"byte_end":8227,"line_start":9,"line_end":9,"column_start":1,"column_end":94}},{"value":"/ allocators or simply because we just need a deterministic cunsumption measurement).","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":8228,"byte_end":8315,"line_start":10,"line_end":10,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":13281,"byte_end":13296,"line_start":89,"line_end":89,"column_start":12,"column_end":27},"name":"MallocSizeOfOps","qualname":"::malloc_size::MallocSizeOfOps","value":"MallocSizeOfOps {  }","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"decl_id":null,"docs":" Operations used when measuring heap usage of data structures.\n","sig":null,"attributes":[{"value":"/ Operations used when measuring heap usage of data structures.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":13204,"byte_end":13269,"line_start":88,"line_end":88,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":13957,"byte_end":13960,"line_start":106,"line_end":106,"column_start":9,"column_end":12},"name":"new","qualname":"<MallocSizeOfOps>::new","value":"pub fn new(VoidPtrToSizeFn, Option<VoidPtrToSizeFn>,\n           Option<Box<VoidPtrToBoolFnMut>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15029,"byte_end":15043,"line_start":133,"line_end":133,"column_start":16,"column_end":30},"name":"malloc_size_of","qualname":"<MallocSizeOfOps>::malloc_size_of","value":"pub unsafe fn malloc_size_of<T: ?Sized>(&Self, *const T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Call `size_of_op` on `ptr`, first checking that the allocation isn't\n empty, because some types (such as `Vec`) utilize empty allocations.\n","sig":null,"attributes":[{"value":"/ Call `size_of_op` on `ptr`, first checking that the allocation isn't","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":14867,"byte_end":14939,"line_start":131,"line_end":131,"column_start":2,"column_end":74}},{"value":"/ empty, because some types (such as `Vec`) utilize empty allocations.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":14941,"byte_end":15013,"line_start":132,"line_end":132,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15246,"byte_end":15274,"line_start":142,"line_end":142,"column_start":9,"column_end":37},"name":"has_malloc_enclosing_size_of","qualname":"<MallocSizeOfOps>::has_malloc_enclosing_size_of","value":"pub fn has_malloc_enclosing_size_of(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is an `enclosing_size_of_op` available?\n","sig":null,"attributes":[{"value":"/ Is an `enclosing_size_of_op` available?","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15194,"byte_end":15237,"line_start":141,"line_end":141,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15448,"byte_end":15472,"line_start":148,"line_end":148,"column_start":16,"column_end":40},"name":"malloc_enclosing_size_of","qualname":"<MallocSizeOfOps>::malloc_enclosing_size_of","value":"pub unsafe fn malloc_enclosing_size_of<T>(&Self, *const T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Call `enclosing_size_of_op`, which must be available, on `ptr`, which\n must not be empty.\n","sig":null,"attributes":[{"value":"/ Call `enclosing_size_of_op`, which must be available, on `ptr`, which","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15335,"byte_end":15408,"line_start":146,"line_end":146,"column_start":2,"column_end":75}},{"value":"/ must not be empty.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15410,"byte_end":15432,"line_start":147,"line_end":147,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15665,"byte_end":15678,"line_start":154,"line_end":154,"column_start":9,"column_end":22},"name":"have_seen_ptr","qualname":"<MallocSizeOfOps>::have_seen_ptr","value":"pub fn have_seen_ptr<T>(&mut Self, *const T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Call `have_seen_ptr_op` on `ptr`.\n","sig":null,"attributes":[{"value":"/ Call `have_seen_ptr_op` on `ptr`.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15619,"byte_end":15656,"line_start":153,"line_end":153,"column_start":2,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15984,"byte_end":15996,"line_start":162,"line_end":162,"column_start":11,"column_end":23},"name":"MallocSizeOf","qualname":"::malloc_size::MallocSizeOf","value":"MallocSizeOf","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Trait for measuring the \"deep\" heap usage of a data structure. This is the\n most commonly-used of the traits.\n","sig":null,"attributes":[{"value":"/ Trait for measuring the \"deep\" heap usage of a data structure. This is the","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15857,"byte_end":15935,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ most commonly-used of the traits.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":15936,"byte_end":15973,"line_start":161,"line_end":161,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16212,"byte_end":16219,"line_start":166,"line_end":166,"column_start":5,"column_end":12},"name":"size_of","qualname":"::malloc_size::MallocSizeOf::size_of","value":"pub fn size_of(&Self, &mut MallocSizeOfOps) -> usize","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Measure the heap usage of all descendant heap-allocated structures, but\n not the space taken up by the value itself.\n If `T::size_of` is a constant, consider implementing `constant_size` as well.\n","sig":null,"attributes":[{"value":"/ Measure the heap usage of all descendant heap-allocated structures, but","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16000,"byte_end":16075,"line_start":163,"line_end":163,"column_start":2,"column_end":77}},{"value":"/ not the space taken up by the value itself.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16077,"byte_end":16124,"line_start":164,"line_end":164,"column_start":2,"column_end":49}},{"value":"/ If `T::size_of` is a constant, consider implementing `constant_size` as well.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16126,"byte_end":16207,"line_start":165,"line_end":165,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16462,"byte_end":16475,"line_start":171,"line_end":171,"column_start":5,"column_end":18},"name":"constant_size","qualname":"::malloc_size::MallocSizeOf::constant_size","value":"pub fn constant_size() -> Option<usize> where Self: Sized","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Used to optimize `MallocSizeOf` implementation for collections\n like `Vec` and `HashMap` to avoid iterating over them unnecessarily.\n The `Self: Sized` bound is for object safety.\n","sig":null,"attributes":[{"value":"/ Used to optimize `MallocSizeOf` implementation for collections","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16266,"byte_end":16332,"line_start":168,"line_end":168,"column_start":2,"column_end":68}},{"value":"/ like `Vec` and `HashMap` to avoid iterating over them unnecessarily.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16334,"byte_end":16406,"line_start":169,"line_end":169,"column_start":2,"column_end":74}},{"value":"/ The `Self: Sized` bound is for object safety.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16408,"byte_end":16457,"line_start":170,"line_end":170,"column_start":2,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":117},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16608,"byte_end":16627,"line_start":180,"line_end":180,"column_start":11,"column_end":30},"name":"MallocShallowSizeOf","qualname":"::malloc_size::MallocShallowSizeOf","value":"MallocShallowSizeOf","parent":null,"children":[{"krate":0,"index":118}],"decl_id":null,"docs":" Trait for measuring the \"shallow\" heap usage of a container.\n","sig":null,"attributes":[{"value":"/ Trait for measuring the \"shallow\" heap usage of a container.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16533,"byte_end":16597,"line_start":179,"line_end":179,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16864,"byte_end":16879,"line_start":185,"line_end":185,"column_start":5,"column_end":20},"name":"shallow_size_of","qualname":"::malloc_size::MallocShallowSizeOf::shallow_size_of","value":"pub fn shallow_size_of(&Self, &mut MallocSizeOfOps) -> usize","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Measure the heap usage of immediate heap-allocated descendant\n structures, but not the space taken up by the value itself. Anything\n beyond the immediate descendants must be measured separately, using\n iteration.\n","sig":null,"attributes":[{"value":"/ Measure the heap usage of immediate heap-allocated descendant","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16631,"byte_end":16696,"line_start":181,"line_end":181,"column_start":2,"column_end":67}},{"value":"/ structures, but not the space taken up by the value itself. Anything","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16698,"byte_end":16770,"line_start":182,"line_end":182,"column_start":2,"column_end":74}},{"value":"/ beyond the immediate descendants must be measured separately, using","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16772,"byte_end":16843,"line_start":183,"line_end":183,"column_start":2,"column_end":73}},{"value":"/ iteration.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":16845,"byte_end":16859,"line_start":184,"line_end":184,"column_start":2,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":262},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"primitives_impls","qualname":"::primitives_impls","value":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828}],"decl_id":null,"docs":" Implementation of `MallocSize` primitive types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"primitive-types\")","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2062,"byte_end":2097,"line_start":63,"line_end":63,"column_start":1,"column_end":36}},{"value":"/ Implementation of `MallocSize` primitive types.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/primitives_impls.rs","byte_start":38400,"byte_end":38451,"line_start":9,"line_end":9,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":296},"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2373,"byte_end":2384,"line_start":74,"line_end":74,"column_start":8,"column_end":19},"name":"malloc_size","qualname":"::malloc_size","value":"pub fn malloc_size<T: MallocSizeOf + ?Sized>(&T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Heap size of structure.","sig":null,"attributes":[{"value":"/ Heap size of structure.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2274,"byte_end":2301,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2302,"byte_end":2305,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Structure can be anything that implements MallocSizeOf.","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2306,"byte_end":2365,"line_start":73,"line_end":73,"column_start":1,"column_end":60}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7606,"byte_end":7607,"line_start":142,"line_end":142,"column_start":43,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7686,"byte_end":7689,"line_start":145,"line_end":145,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":8854,"byte_end":8857,"line_start":29,"line_end":29,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":8980,"byte_end":8986,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":9121,"byte_end":9124,"line_start":41,"line_end":41,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":9282,"byte_end":9285,"line_start":47,"line_end":47,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":13931,"byte_end":13946,"line_start":105,"line_end":105,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":19935,"byte_end":19938,"line_start":273,"line_end":273,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":20494,"byte_end":20500,"line_start":293,"line_end":293,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":20785,"byte_end":20791,"line_start":306,"line_end":306,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":21199,"byte_end":21203,"line_start":319,"line_end":319,"column_start":59,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":21412,"byte_end":21419,"line_start":328,"line_end":328,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":21664,"byte_end":21667,"line_start":338,"line_end":338,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":22194,"byte_end":22197,"line_start":362,"line_end":362,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":22505,"byte_end":22513,"line_start":374,"line_end":374,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":23000,"byte_end":23008,"line_start":391,"line_end":391,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":23342,"byte_end":23349,"line_start":404,"line_end":404,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":24023,"byte_end":24030,"line_start":424,"line_end":424,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":24393,"byte_end":24400,"line_start":440,"line_end":440,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":24634,"byte_end":24641,"line_start":450,"line_end":450,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":25083,"byte_end":25090,"line_start":462,"line_end":462,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":25503,"byte_end":25511,"line_start":478,"line_end":478,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":25848,"byte_end":25856,"line_start":488,"line_end":488,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":26263,"byte_end":26271,"line_start":504,"line_end":504,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":26655,"byte_end":26663,"line_start":516,"line_end":516,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":27427,"byte_end":27430,"line_start":544,"line_end":544,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":27646,"byte_end":27649,"line_start":551,"line_end":551,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":27915,"byte_end":27918,"line_start":562,"line_end":562,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":28583,"byte_end":28588,"line_start":581,"line_end":581,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":28769,"byte_end":28774,"line_start":588,"line_end":588,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":28944,"byte_end":28950,"line_start":595,"line_end":595,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":29131,"byte_end":29137,"line_start":602,"line_end":602,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":31847,"byte_end":31857,"line_start":698,"line_end":698,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":31958,"byte_end":31968,"line_start":706,"line_end":706,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":32110,"byte_end":32117,"line_start":713,"line_end":713,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":32558,"byte_end":32565,"line_start":725,"line_end":725,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":1403,"byte_end":1413,"line_start":47,"line_end":47,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":1528,"byte_end":1534,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":31}},{"kind":"Mod","span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/lib.rs","byte_start":2106,"byte_end":2122,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":262}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7347,"byte_end":7359,"line_start":133,"line_end":133,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":114},"to":{"krate":0,"index":24}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7606,"byte_end":7607,"line_start":142,"line_end":142,"column_start":43,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":0,"index":24}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/allocators.rs","byte_start":7686,"byte_end":7689,"line_start":145,"line_end":145,"column_start":51,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":5669},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":8854,"byte_end":8857,"line_start":29,"line_end":29,"column_start":41,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":8980,"byte_end":8986,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":7285},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":9121,"byte_end":9124,"line_start":41,"line_end":41,"column_start":33,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":6772},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/sizeof.rs","byte_start":9282,"byte_end":9285,"line_start":47,"line_end":47,"column_start":46,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":5669},"to":{"krate":0,"index":121}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":13931,"byte_end":13946,"line_start":105,"line_end":105,"column_start":6,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":19935,"byte_end":19938,"line_start":273,"line_end":273,"column_start":49,"column_end":52},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":195},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":20494,"byte_end":20500,"line_start":293,"line_end":293,"column_start":40,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":33081},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":20785,"byte_end":20791,"line_start":306,"line_end":306,"column_start":57,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":33231},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":21199,"byte_end":21203,"line_start":319,"line_end":319,"column_start":59,"column_end":63},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":3973},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":21412,"byte_end":21419,"line_start":328,"line_end":328,"column_start":52,"column_end":59},"kind":{"Impl":{"id":11}},"from":{"krate":2,"index":4030},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":21664,"byte_end":21667,"line_start":338,"line_end":338,"column_start":61,"column_end":64},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":543},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":22194,"byte_end":22197,"line_start":362,"line_end":362,"column_start":40,"column_end":43},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":6772},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":22505,"byte_end":22513,"line_start":374,"line_end":374,"column_start":52,"column_end":60},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":3803},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":23000,"byte_end":23008,"line_start":391,"line_end":391,"column_start":59,"column_end":67},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":3803},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":23342,"byte_end":23349,"line_start":404,"line_end":404,"column_start":54,"column_end":61},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":1802},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":24023,"byte_end":24030,"line_start":424,"line_end":424,"column_start":47,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":1802},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":24393,"byte_end":24400,"line_start":440,"line_end":440,"column_start":51,"column_end":58},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":23457},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":24634,"byte_end":24641,"line_start":450,"line_end":450,"column_start":57,"column_end":64},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":1092},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":25083,"byte_end":25090,"line_start":462,"line_end":462,"column_start":50,"column_end":57},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":1092},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":25503,"byte_end":25511,"line_start":478,"line_end":478,"column_start":55,"column_end":63},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":1219},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":25848,"byte_end":25856,"line_start":488,"line_end":488,"column_start":48,"column_end":56},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":1219},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":26263,"byte_end":26271,"line_start":504,"line_end":504,"column_start":52,"column_end":60},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":7143},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":26655,"byte_end":26663,"line_start":516,"line_end":516,"column_start":45,"column_end":53},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":7143},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":27427,"byte_end":27430,"line_start":544,"line_end":544,"column_start":53,"column_end":56},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":5669},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":27646,"byte_end":27649,"line_start":551,"line_end":551,"column_start":44,"column_end":47},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":5669},"to":{"krate":0,"index":125}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":27915,"byte_end":27918,"line_start":562,"line_end":562,"column_start":51,"column_end":54},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":5669},"to":{"krate":0,"index":123}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":28583,"byte_end":28588,"line_start":581,"line_end":581,"column_start":51,"column_end":56},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":7052},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":28769,"byte_end":28774,"line_start":588,"line_end":588,"column_start":53,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":42,"index":128},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":28944,"byte_end":28950,"line_start":595,"line_end":595,"column_start":51,"column_end":57},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":7295},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":29131,"byte_end":29137,"line_start":602,"line_end":602,"column_start":53,"column_end":59},"kind":{"Impl":{"id":31}},"from":{"krate":42,"index":510},"to":{"krate":0,"index":114}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":31847,"byte_end":31857,"line_start":698,"line_end":698,"column_start":33,"column_end":43},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":672},"to":{"krate":2,"index":3054}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":31958,"byte_end":31968,"line_start":706,"line_end":706,"column_start":36,"column_end":46},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":672},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":32110,"byte_end":32117,"line_start":713,"line_end":713,"column_start":50,"column_end":57},"kind":{"Impl":{"id":66}},"from":{"krate":48,"index":394},"to":{"krate":0,"index":117}},{"span":{"file_name":"/Users/hao/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-util-mem-0.9.0/src/malloc_size.rs","byte_start":32558,"byte_end":32565,"line_start":725,"line_end":725,"column_start":43,"column_end":50},"kind":{"Impl":{"id":67}},"from":{"krate":48,"index":394},"to":{"krate":0,"index":114}}]}