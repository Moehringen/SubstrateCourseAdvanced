{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore","program":"/Users/hao/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","sp_keystore","--edition=2018","/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=b18f41abba80a0c3","-C","extra-filename=-b18f41abba80a0c3","--out-dir","/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps","-L","dependency=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps","--extern","async_trait=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libasync_trait-a7c84c20382c052d.dylib","--extern","derive_more=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libderive_more-6a90bb8a448c3d5b.dylib","--extern","futures=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libfutures-0c2344ce5ad4b00e.rmeta","--extern","merlin=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libmerlin-c86c8021d9cb760e.rmeta","--extern","codec=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libparity_scale_codec-230d69f1fc1ca740.rmeta","--extern","parking_lot=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libparking_lot-af4e1c5926927c01.rmeta","--extern","schnorrkel=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libschnorrkel-b64dc874fbb2aab4.rmeta","--extern","sp_core=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libsp_core-f557e56badc9718e.rmeta","--extern","sp_externalities=/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libsp_externalities-eb499a99ef548ec7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/hao/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/hao/Code/substrate/course/lesson_1/pallets/template/target/rls/debug/deps/libsp_keystore-b18f41abba80a0c3.rmeta"},"prelude":{"crate_id":{"name":"sp_keystore","disambiguator":[7322130774779880181,5120379863865392769]},"crate_root":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src","external_crates":[{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16841035755873987138,8908851700613744445]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":2,"id":{"name":"core","disambiguator":[2926027659608477847,13266562012387424727]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16543572953398241612,13462986764070019698]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8178771900672787435,15547668090406144857]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9156920429250817125,11075234384113967897]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[11279596189188458369,12350340105194636324]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7312015018221179255,4742041386565820272]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15891109833083679534,17984379632392221749]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16902119159609667480,6524026496945547584]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3621897933862434564,16562186117073056480]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[15536936008295295249,10906270311338372224]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10382820985286059075,14577866580883878825]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14597332125720628794,2125191253906842166]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8450432001629562665,933745348923591991]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16715270918519391585,15765631768114097577]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[3555059470230282113,9390402421115331706]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":17,"id":{"name":"sp_core","disambiguator":[2122991016468585199,12606957953635581854]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":18,"id":{"name":"sp_runtime_interface","disambiguator":[4525886213889739809,12348220370138338022]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":19,"id":{"name":"sp_wasm_interface","disambiguator":[18067011074052347567,17169526622924723701]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":20,"id":{"name":"sp_std","disambiguator":[2699973233880931719,15822577206137237270]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","num":21,"id":{"name":"parity_scale_codec","disambiguator":[11928373191497758672,1641820410704555505]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","num":22,"id":{"name":"parity_scale_codec_derive","disambiguator":[720558869561536122,10362089588301474101]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","num":23,"id":{"name":"arrayvec","disambiguator":[14129922488301288610,17506012598060559310]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","num":24,"id":{"name":"byte_slice_cast","disambiguator":[11196174348507219991,6555969724472170837]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","num":25,"id":{"name":"impl_trait_for_tuples","disambiguator":[12391801246454407389,154514259672981849]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","num":26,"id":{"name":"serde","disambiguator":[2066183734022728860,3168566282548401161]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","num":27,"id":{"name":"serde_derive","disambiguator":[17439753355787619812,9235288723232798023]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":28,"id":{"name":"wasmi","disambiguator":[8604626803097740894,2465811588722420440]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":29,"id":{"name":"memory_units","disambiguator":[15981829207989893656,13171717728980780305]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":30,"id":{"name":"parity_wasm","disambiguator":[4298103896688939932,12543838239699137440]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":31,"id":{"name":"wasmi_validation","disambiguator":[12916936008374890800,9234970967946406979]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":32,"id":{"name":"num_rational","disambiguator":[17743202675466800699,10803609799260325073]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":33,"id":{"name":"num_bigint","disambiguator":[5271844086301814852,2555328908712785042]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":34,"id":{"name":"num_integer","disambiguator":[11453472966580807117,12602852276722494745]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":35,"id":{"name":"num_traits","disambiguator":[10136448233594811178,12002586209321602672]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":36,"id":{"name":"libc","disambiguator":[8408077373994783170,13051148311648355700]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":37,"id":{"name":"sp_tracing","disambiguator":[4005240020841074736,17559174883623443558]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":38,"id":{"name":"tracing_core","disambiguator":[13113554764402626681,17689730298372278915]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":39,"id":{"name":"lazy_static","disambiguator":[5680650355078591915,14768917325971828572]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":40,"id":{"name":"tracing","disambiguator":[14055190215076062612,5721768649385248013]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":41,"id":{"name":"cfg_if","disambiguator":[11158084692184962471,12185878372230750563]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":42,"id":{"name":"pin_project_lite","disambiguator":[10498977370055215973,242170733027740362]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":43,"id":{"name":"tracing_subscriber","disambiguator":[9464334605294939953,13185018338362602930]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":44,"id":{"name":"regex","disambiguator":[4028426081562301502,13655508823740636148]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":45,"id":{"name":"regex_syntax","disambiguator":[7393890418923610686,9570251266964789122]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":46,"id":{"name":"aho_corasick","disambiguator":[10514246666007831627,1042195488038662623]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":47,"id":{"name":"memchr","disambiguator":[6059939137763501885,4918525539329136132]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":48,"id":{"name":"matchers","disambiguator":[10611121914091734351,14448861797940787551]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":49,"id":{"name":"regex_automata","disambiguator":[18252767052671681541,11048514714353317080]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":50,"id":{"name":"ansi_term","disambiguator":[597440120238544624,5411301847294687744]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":51,"id":{"name":"tracing_log","disambiguator":[16286437304611653974,9220995446557294853]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":52,"id":{"name":"log","disambiguator":[3047386104440218104,15047495743817245954]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":53,"id":{"name":"serde_json","disambiguator":[11123916126946477303,18334242041829750013]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":54,"id":{"name":"itoa","disambiguator":[5765556404359382634,14134347353873087345]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":55,"id":{"name":"ryu","disambiguator":[13004678515988813842,14618658422839943756]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":56,"id":{"name":"tracing_serde","disambiguator":[6056087163952455035,9009183623263753575]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":57,"id":{"name":"sharded_slab","disambiguator":[6843845563929019580,4494883944582758232]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":58,"id":{"name":"thread_local","disambiguator":[15844062166225956109,544471212414672936]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":59,"id":{"name":"once_cell","disambiguator":[14928994136604853605,5281027160212830575]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":60,"id":{"name":"parking_lot","disambiguator":[16154125520130077868,12438378832271529634]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":61,"id":{"name":"instant","disambiguator":[9557348853919165323,2157178867518543181]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":62,"id":{"name":"lock_api","disambiguator":[14251985799452023082,7181950131503270685]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":63,"id":{"name":"scopeguard","disambiguator":[2529914620654078643,4817416488441989513]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":64,"id":{"name":"parking_lot_core","disambiguator":[11113167263741901826,16131032256511391119]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":65,"id":{"name":"smallvec","disambiguator":[16857072093849855746,12777979551817942725]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":66,"id":{"name":"chrono","disambiguator":[12267553360246043693,17314253673634773111]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":67,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[4930209296769064969,12003095296576213873]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":68,"id":{"name":"sp_externalities","disambiguator":[15557818400781335072,2119145530906059421]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":69,"id":{"name":"sp_storage","disambiguator":[8543847019988108954,3614279421047422068]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":70,"id":{"name":"sp_debug_derive","disambiguator":[13241921290052087218,16946087262219699210]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":71,"id":{"name":"ref_cast","disambiguator":[8340656318404415124,16251212526837066478]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":72,"id":{"name":"ref_cast_impl","disambiguator":[3414245314685408236,5197951517038975575]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":73,"id":{"name":"impl_serde","disambiguator":[11129541681974606027,9688703408052213201]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":74,"id":{"name":"environmental","disambiguator":[4167999040386714664,2512039869361716617]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":75,"id":{"name":"primitive_types","disambiguator":[1666979569465101156,12774793809408488845]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":76,"id":{"name":"fixed_hash","disambiguator":[14859117202573941552,12410659943152693026]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":77,"id":{"name":"static_assertions","disambiguator":[2457103292964434045,11157123979498689585]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":78,"id":{"name":"byteorder","disambiguator":[15204339809225635029,7388579149518174050]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":79,"id":{"name":"rustc_hex","disambiguator":[12130226214522788324,149424593449194009]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":80,"id":{"name":"rand","disambiguator":[6140530642430359294,3505253419696211055]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":81,"id":{"name":"rand_core","disambiguator":[11679689446711882041,15697039053615341510]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":82,"id":{"name":"getrandom","disambiguator":[17456250068937214157,10220211497176331784]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":83,"id":{"name":"rand_chacha","disambiguator":[9768240473132757375,8271380216128345948]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":84,"id":{"name":"ppv_lite86","disambiguator":[9543165017316146690,4553697136210033367]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":85,"id":{"name":"uint","disambiguator":[10368049799069140156,4895546306340104327]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":86,"id":{"name":"hex","disambiguator":[10309083460089850368,5529099788247037443]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":87,"id":{"name":"crunchy","disambiguator":[8008404410926411377,14572539584830108260]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":88,"id":{"name":"impl_codec","disambiguator":[4092706628566794453,11684981851110066355]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":89,"id":{"name":"sha2","disambiguator":[14906384366044767728,17694587390111483053]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":90,"id":{"name":"block_buffer","disambiguator":[8788565658044074404,5891206948503439062]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":91,"id":{"name":"generic_array","disambiguator":[2337757577070701638,14044355793205228084]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":92,"id":{"name":"typenum","disambiguator":[12196112343123066798,15253588134102073309]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":93,"id":{"name":"digest","disambiguator":[8815865924849779486,7795993228235284742]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":94,"id":{"name":"opaque_debug","disambiguator":[9150464416765957549,15855849970884778460]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":95,"id":{"name":"tiny_keccak","disambiguator":[14011861374028304469,1879565726052724443]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":96,"id":{"name":"rand","disambiguator":[15570369724689941276,202875934003065682]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":97,"id":{"name":"rand_core","disambiguator":[14679934959792628240,937290653617092081]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":98,"id":{"name":"getrandom","disambiguator":[611265278517632688,17310430537751814088]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":99,"id":{"name":"rand_chacha","disambiguator":[2792313784779368359,4674830155516250642]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":100,"id":{"name":"rand_pcg","disambiguator":[12649170576459284485,11417611999276562647]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":101,"id":{"name":"base58","disambiguator":[1668826410126565524,9920856804132101033]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":102,"id":{"name":"zeroize","disambiguator":[4965324391074469970,5442132202588004203]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":103,"id":{"name":"zeroize_derive","disambiguator":[13847837486101053626,4945731412148977036]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":104,"id":{"name":"secrecy","disambiguator":[1200839270063002141,5518490099575379892]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":105,"id":{"name":"ed25519_dalek","disambiguator":[12475614715197307426,2108631806041359872]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":106,"id":{"name":"ed25519","disambiguator":[4374406007250978199,277279169622570769]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":107,"id":{"name":"signature","disambiguator":[2884963339421331012,3027785301644772543]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":108,"id":{"name":"curve25519_dalek","disambiguator":[11781561562399009142,15742607999613655282]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":109,"id":{"name":"subtle","disambiguator":[4361875209938017689,7777186720441089215]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":110,"id":{"name":"substrate_bip39","disambiguator":[6164632383196118000,13550300129143742532]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":111,"id":{"name":"sha2","disambiguator":[16051327590097727111,3391248868853847550]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":112,"id":{"name":"block_buffer","disambiguator":[7379424504518017007,5392188201879688381]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":113,"id":{"name":"block_padding","disambiguator":[8772046420136704540,5735116335706889850]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":114,"id":{"name":"byte_tools","disambiguator":[7074216690792059360,10043333749910221420]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":115,"id":{"name":"generic_array","disambiguator":[4046251306443719340,3865738861629641419]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":116,"id":{"name":"fake_simd","disambiguator":[4382181535258642439,12928800494780099286]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":117,"id":{"name":"opaque_debug","disambiguator":[2096681263148253631,6548032975680816882]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":118,"id":{"name":"digest","disambiguator":[5489387160607851192,14659131736655070174]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":119,"id":{"name":"hmac","disambiguator":[1740933372246854317,11460845285790367745]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":120,"id":{"name":"crypto_mac","disambiguator":[5306711982594388194,17143389544843298364]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":121,"id":{"name":"subtle","disambiguator":[654719504477420109,2791072875277882560]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":122,"id":{"name":"pbkdf2","disambiguator":[7541239636893733319,13078989461313075122]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","num":123,"id":{"name":"schnorrkel","disambiguator":[17295401709938536717,4830087334539065644]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":124,"id":{"name":"arrayref","disambiguator":[8566814147558579324,11925272825205014010]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":125,"id":{"name":"curve25519_dalek","disambiguator":[4432665717406387197,17516699125630948792]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","num":126,"id":{"name":"merlin","disambiguator":[16787738284566998545,12660844527776811037]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":127,"id":{"name":"keccak","disambiguator":[16305056613233705425,6140187543422693278]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":128,"id":{"name":"arrayvec","disambiguator":[4378502379094314872,13220549285322475807]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":129,"id":{"name":"bip39","disambiguator":[17503057618538141927,1781552501898266627]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":130,"id":{"name":"thiserror","disambiguator":[10101441722633643675,6532786257300635039]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":131,"id":{"name":"thiserror_impl","disambiguator":[3100511519894427210,13741159619133470823]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":132,"id":{"name":"rustc_hash","disambiguator":[7801313958064148361,3168722583158699536]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":133,"id":{"name":"anyhow","disambiguator":[17709106270436484827,6641453614455351923]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":134,"id":{"name":"unicode_normalization","disambiguator":[14621447945239689672,17248963154653260818]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":135,"id":{"name":"tinyvec","disambiguator":[11295560345869935802,4782928978417778475]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":136,"id":{"name":"tinyvec_macros","disambiguator":[6033589394037101062,13482438955342198716]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":137,"id":{"name":"hmac","disambiguator":[4074846685426595543,16141536754429849884]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":138,"id":{"name":"crypto_mac","disambiguator":[5587959749426694438,5746456772436104890]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":139,"id":{"name":"pbkdf2","disambiguator":[9390370027550788766,556166852551285077]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":140,"id":{"name":"secp256k1","disambiguator":[15777000461703834708,12404321152794117283]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":141,"id":{"name":"hmac_drbg","disambiguator":[6349636183489932567,1807832415635620011]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":142,"id":{"name":"hash_db","disambiguator":[10872492820361299920,2351588084269256150]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":143,"id":{"name":"hash256_std_hasher","disambiguator":[17862105734723098829,478749245963601125]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":144,"id":{"name":"parity_util_mem","disambiguator":[5809116903985876306,14158676002230908251]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":145,"id":{"name":"parity_util_mem_derive","disambiguator":[8836695746460547087,14401522620278090745]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":146,"id":{"name":"hashbrown","disambiguator":[1841890765748134074,2810553404501966004]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":147,"id":{"name":"ahash","disambiguator":[9127756577553639441,2316833870354681055]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":148,"id":{"name":"dyn_clonable","disambiguator":[4149117207944916196,12646292665074102900]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":149,"id":{"name":"dyn_clone","disambiguator":[14492650125530473987,4243670920340458427]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":150,"id":{"name":"dyn_clonable_impl","disambiguator":[8429276098402231893,10108915385506199780]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":151,"id":{"name":"blake2_rfc","disambiguator":[9235886663802989112,14207237361065575758]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":152,"id":{"name":"arrayvec","disambiguator":[10534617132384739092,17248349853443373990]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":153,"id":{"name":"nodrop","disambiguator":[11214918644946224397,2113331494954808681]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":154,"id":{"name":"constant_time_eq","disambiguator":[2844113143679394456,3596751362194200404]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":155,"id":{"name":"twox_hash","disambiguator":[17590134599923645350,6303718582792211826]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":156,"id":{"name":"futures","disambiguator":[3230466530885982762,9704549253360239380]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":157,"id":{"name":"futures_core","disambiguator":[18113826531667046836,5843477762001325523]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":158,"id":{"name":"futures_util","disambiguator":[15615077796125141375,17732107475538625045]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":159,"id":{"name":"pin_utils","disambiguator":[13026940917516763079,4221314469296175299]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":160,"id":{"name":"futures_macro","disambiguator":[12809822177502253150,12975809510546895621]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":161,"id":{"name":"futures_task","disambiguator":[14539579659745696315,4974513738361065038]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":162,"id":{"name":"futures_sink","disambiguator":[7881870548508397438,1556637123298560328]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":163,"id":{"name":"futures_channel","disambiguator":[10763216803206016150,7535469814600376671]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":164,"id":{"name":"slab","disambiguator":[4919850370348008694,13070504908475567623]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":165,"id":{"name":"futures_io","disambiguator":[10204232239999392612,1355793745468801653]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":166,"id":{"name":"futures_executor","disambiguator":[6915116127455810602,6713979161798067678]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":167,"id":{"name":"num_cpus","disambiguator":[841260227735259333,15918329754742671839]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","num":168,"id":{"name":"async_trait","disambiguator":[2753386951373780797,10660988013414595935]}},{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","num":169,"id":{"name":"derive_more","disambiguator":[953539947705462296,3519785540640746558]}}],"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":686,"byte_end":12227,"line_start":18,"line_end":364,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":686,"byte_end":12227,"line_start":18,"line_end":364,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":119},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":296},{"krate":0,"index":174},{"krate":0,"index":191},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":364}],"decl_id":null,"docs":" Keystore traits\n","sig":null,"attributes":[{"value":"/ Keystore traits","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":686,"byte_end":705,"line_start":18,"line_end":18,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::testing","value":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":68},{"krate":0,"index":196},{"krate":0,"index":79},{"krate":0,"index":115},{"krate":0,"index":117}],"decl_id":null,"docs":" Types that should only be used for testing!\n","sig":null,"attributes":[{"value":"/ Types that should only be used for testing!","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":12915,"byte_end":12962,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":192},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":13409,"byte_end":13417,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"KeyStore","qualname":"::testing::KeyStore","value":"KeyStore {  }","parent":null,"children":[{"krate":0,"index":193}],"decl_id":null,"docs":" A keystore implementation usable in tests.\n","sig":null,"attributes":[{"value":"/ A keystore implementation usable in tests.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":13332,"byte_end":13378,"line_start":33,"line_end":33,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":13626,"byte_end":13629,"line_start":42,"line_end":42,"column_start":9,"column_end":12},"name":"new","qualname":"<KeyStore>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `Self`.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":13580,"byte_end":13617,"line_start":41,"line_end":41,"column_start":2,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":119},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vrf","qualname":"::vrf","value":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":254},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":133},{"krate":0,"index":136}],"decl_id":null,"docs":" VRF-specifc data types and helpers\n","sig":null,"attributes":[{"value":"/ VRF-specifc data types and helpers","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24415,"byte_end":24453,"line_start":18,"line_end":18,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24804,"byte_end":24809,"line_start":30,"line_end":30,"column_start":2,"column_end":7},"name":"Bytes","qualname":"::vrf::VRFTranscriptValue::Bytes","value":"VRFTranscriptValue::Bytes(Vec<u8>)","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Value is an array of bytes\n","sig":null,"attributes":[{"value":"/ Value is an array of bytes","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24772,"byte_end":24802,"line_start":29,"line_end":29,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24849,"byte_end":24852,"line_start":32,"line_end":32,"column_start":2,"column_end":5},"name":"U64","qualname":"::vrf::VRFTranscriptValue::U64","value":"VRFTranscriptValue::U64(u64)","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Value is a u64 integer\n","sig":null,"attributes":[{"value":"/ Value is a u64 integer","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24821,"byte_end":24847,"line_start":31,"line_end":31,"column_start":2,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":254},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24750,"byte_end":24768,"line_start":28,"line_end":28,"column_start":10,"column_end":28},"name":"VRFTranscriptValue","qualname":"::vrf::VRFTranscriptValue","value":"pub enum VRFTranscriptValue { Bytes(Vec<u8>), U64(u64), }","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":258}],"decl_id":null,"docs":" An enum whose variants represent possible\n accepted values to construct the VRF transcript\n","sig":null,"attributes":[{"value":"/ An enum whose variants represent possible","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24543,"byte_end":24588,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ accepted values to construct the VRF transcript","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24589,"byte_end":24640,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":269},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24921,"byte_end":24938,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"VRFTranscriptData","qualname":"::vrf::VRFTranscriptData","value":"VRFTranscriptData { label, items }","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" VRF Transcript data\n","sig":null,"attributes":[{"value":"/ VRF Transcript data","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24861,"byte_end":24884,"line_start":34,"line_end":34,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":270},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24974,"byte_end":24979,"line_start":38,"line_end":38,"column_start":6,"column_end":11},"name":"label","qualname":"::vrf::VRFTranscriptData::label","value":"&'static [u8]","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" The transcript's label\n","sig":null,"attributes":[{"value":"/ The transcript's label","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24942,"byte_end":24968,"line_start":37,"line_end":37,"column_start":2,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":271},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25059,"byte_end":25064,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"name":"items","qualname":"::vrf::VRFTranscriptData::items","value":"std::vec::Vec<(&'static str, vrf::VRFTranscriptValue)>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Additional data to be registered into the transcript\n","sig":null,"attributes":[{"value":"/ Additional data to be registered into the transcript","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":24997,"byte_end":25053,"line_start":39,"line_end":39,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25218,"byte_end":25230,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"VRFSignature","qualname":"::vrf::VRFSignature","value":"VRFSignature { output, proof }","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" VRF signature data\n","sig":null,"attributes":[{"value":"/ VRF signature data","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25109,"byte_end":25131,"line_start":42,"line_end":42,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":134},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25268,"byte_end":25274,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"name":"output","qualname":"::vrf::VRFSignature::output","value":"schnorrkel::vrf::VRFOutput","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" The VRFOutput serialized\n","sig":null,"attributes":[{"value":"/ The VRFOutput serialized","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25234,"byte_end":25262,"line_start":45,"line_end":45,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":135},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25321,"byte_end":25326,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"name":"proof","qualname":"::vrf::VRFSignature::proof","value":"schnorrkel::vrf::VRFProof","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" The calculated VRFProof\n","sig":null,"attributes":[{"value":"/ The calculated VRFProof","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25288,"byte_end":25315,"line_start":47,"line_end":47,"column_start":2,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25432,"byte_end":25447,"line_start":54,"line_end":54,"column_start":8,"column_end":23},"name":"make_transcript","qualname":"::vrf::make_transcript","value":"pub fn make_transcript(VRFTranscriptData) -> Transcript","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Transcript` object from data.","sig":null,"attributes":[{"value":"/ Construct a `Transcript` object from data.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25341,"byte_end":25387,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25388,"byte_end":25391,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Returns `merlin::Transcript`","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/vrf.rs","byte_start":25392,"byte_end":25424,"line_start":53,"line_end":53,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":285},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1144,"byte_end":1159,"line_start":36,"line_end":36,"column_start":2,"column_end":17},"name":"KeyNotSupported","qualname":"::Error::KeyNotSupported","value":"Error::KeyNotSupported(KeyTypeId)","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Public key type is not supported\n","sig":null,"attributes":[{"value":"/ Public key type is not supported","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1059,"byte_end":1095,"line_start":34,"line_end":34,"column_start":2,"column_end":38}},{"value":"display(fmt = \"Key not supported: {:?}\", _0)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1097,"byte_end":1142,"line_start":35,"line_end":35,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":288},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1239,"byte_end":1254,"line_start":39,"line_end":39,"column_start":2,"column_end":17},"name":"ValidationError","qualname":"::Error::ValidationError","value":"Error::ValidationError(String)","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Validation error\n","sig":null,"attributes":[{"value":"/ Validation error","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1173,"byte_end":1193,"line_start":37,"line_end":37,"column_start":2,"column_end":22}},{"value":"display(fmt = \"Validation error: {}\", _0)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1195,"byte_end":1237,"line_start":38,"line_end":38,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":291},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1331,"byte_end":1342,"line_start":42,"line_end":42,"column_start":2,"column_end":13},"name":"Unavailable","qualname":"::Error::Unavailable","value":"Error::Unavailable","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Keystore unavailable\n","sig":null,"attributes":[{"value":"/ Keystore unavailable","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1265,"byte_end":1289,"line_start":40,"line_end":40,"column_start":2,"column_end":26}},{"value":"display(fmt = \"Keystore unavailable\")","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1291,"byte_end":1329,"line_start":41,"line_end":41,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":293},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1431,"byte_end":1436,"line_start":45,"line_end":45,"column_start":2,"column_end":7},"name":"Other","qualname":"::Error::Other","value":"Error::Other(String)","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Programming errors\n","sig":null,"attributes":[{"value":"/ Programming errors","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1345,"byte_end":1367,"line_start":43,"line_end":43,"column_start":2,"column_end":24}},{"value":"display(fmt = \"An unknown keystore error occurred: {}\", _0)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1369,"byte_end":1429,"line_start":44,"line_end":44,"column_start":2,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":280},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1050,"byte_end":1055,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    KeyNotSupported(KeyTypeId),\n    ValidationError(String),\n    Unavailable,\n    Other(String),\n}","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":293}],"decl_id":null,"docs":" CryptoStore error\n","sig":null,"attributes":[{"value":"/ CryptoStore error","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":980,"byte_end":1001,"line_start":31,"line_end":31,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":296},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1539,"byte_end":1550,"line_start":50,"line_end":50,"column_start":11,"column_end":22},"name":"CryptoStore","qualname":"::CryptoStore","value":"CryptoStore: Send + Sync","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":318},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":333},{"krate":0,"index":338},{"krate":0,"index":344},{"krate":0,"index":350}],"decl_id":null,"docs":" Something that generates, stores and provides access to keys.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1637,"byte_end":1656,"line_start":52,"line_end":52,"column_start":11,"column_end":30},"name":"sr25519_public_keys","qualname":"::CryptoStore::sr25519_public_keys","value":"pub fn sr25519_public_keys<'life0, 'async_trait>(&'life0 Self, KeyTypeId)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Vec<sr25519::Public>> + ::core::marker::Send +\n                         'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Returns all sr25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1942,"byte_end":1962,"line_start":58,"line_end":58,"column_start":11,"column_end":31},"name":"sr25519_generate_new","qualname":"::CryptoStore::sr25519_generate_new","value":"pub fn sr25519_generate_new<'life0, 'life1,\n                            'async_trait>(&'life0 Self, KeyTypeId,\n                                          Option<&'life1 str>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<sr25519::Public, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Generate a new sr25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":2121,"byte_end":2140,"line_start":64,"line_end":64,"column_start":11,"column_end":30},"name":"ed25519_public_keys","qualname":"::CryptoStore::ed25519_public_keys","value":"pub fn ed25519_public_keys<'life0, 'async_trait>(&'life0 Self, KeyTypeId)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Vec<ed25519::Public>> + ::core::marker::Send +\n                         'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Returns all ed25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":2426,"byte_end":2446,"line_start":70,"line_end":70,"column_start":11,"column_end":31},"name":"ed25519_generate_new","qualname":"::CryptoStore::ed25519_generate_new","value":"pub fn ed25519_generate_new<'life0, 'life1,\n                            'async_trait>(&'life0 Self, KeyTypeId,\n                                          Option<&'life1 str>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<ed25519::Public, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Generate a new ed25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":2603,"byte_end":2620,"line_start":76,"line_end":76,"column_start":11,"column_end":28},"name":"ecdsa_public_keys","qualname":"::CryptoStore::ecdsa_public_keys","value":"pub fn ecdsa_public_keys<'life0, 'async_trait>(&'life0 Self, KeyTypeId)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Vec<ecdsa::Public>> + ::core::marker::Send +\n                         'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Returns all ecdsa public keys for the given key type.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":2902,"byte_end":2920,"line_start":82,"line_end":82,"column_start":11,"column_end":29},"name":"ecdsa_generate_new","qualname":"::CryptoStore::ecdsa_generate_new","value":"pub fn ecdsa_generate_new<'life0, 'life1,\n                          'async_trait>(&'life0 Self, KeyTypeId,\n                                        Option<&'life1 str>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<ecdsa::Public, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Generate a new ecdsa key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":3277,"byte_end":3291,"line_start":94,"line_end":94,"column_start":11,"column_end":25},"name":"insert_unknown","qualname":"::CryptoStore::insert_unknown","value":"pub fn insert_unknown<'life0, 'life1, 'life2,\n                      'async_trait>(&'life0 Self, KeyTypeId, &'life1 str,\n                                    &'life2 [u8])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = Result<(), ()>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, 'life2:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Insert a new key. This doesn't require any known of the crypto; but a public key must be\n manually provided.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":3592,"byte_end":3606,"line_start":105,"line_end":105,"column_start":11,"column_end":25},"name":"supported_keys","qualname":"::CryptoStore::supported_keys","value":"pub fn supported_keys<'life0,\n                      'async_trait>(&'life0 Self, KeyTypeId,\n                                    Vec<CryptoTypePublicPair>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<Vec<CryptoTypePublicPair>, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Find intersection between provided keys and supported keys","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":3815,"byte_end":3819,"line_start":113,"line_end":113,"column_start":11,"column_end":15},"name":"keys","qualname":"::CryptoStore::keys","value":"pub fn keys<'life0, 'async_trait>(&'life0 Self, KeyTypeId)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<Vec<CryptoTypePublicPair>, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" List all supported keys","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":4050,"byte_end":4058,"line_start":118,"line_end":118,"column_start":11,"column_end":19},"name":"has_keys","qualname":"::CryptoStore::has_keys","value":"pub fn has_keys<'life0, 'life1,\n                'async_trait>(&'life0 Self, &'life1 [(Vec<u8>, KeyTypeId)])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = bool> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Checks if the private keys for the given public key and key type combinations exist.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":4380,"byte_end":4389,"line_start":127,"line_end":127,"column_start":11,"column_end":20},"name":"sign_with","qualname":"::CryptoStore::sign_with","value":"pub fn sign_with<'life0, 'life1, 'life2,\n                 'async_trait>(&'life0 Self, KeyTypeId,\n                               &'life1 CryptoTypePublicPair, &'life2 [u8])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<Option<Vec<u8>>, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, 'life2:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Sign with key","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":4774,"byte_end":4787,"line_start":141,"line_end":141,"column_start":11,"column_end":24},"name":"sign_with_any","qualname":"::CryptoStore::sign_with_any","value":"pub fn sign_with_any<'life0, 'life1,\n                     'async_trait>(&'life0 Self, KeyTypeId,\n                                   Vec<CryptoTypePublicPair>, &'life1 [u8])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<Option<(CryptoTypePublicPair, Vec<u8>)>,\n                                Error>> + ::core::marker::Send +\n                         'async_trait>> where 'life0:'async_trait,\n'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Sign with any key","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: let_unit_value, clippy :: type_complexity, clippy ::\n        type_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":5536,"byte_end":5549,"line_start":167,"line_end":167,"column_start":11,"column_end":24},"name":"sign_with_all","qualname":"::CryptoStore::sign_with_all","value":"pub fn sign_with_all<'life0, 'life1,\n                     'async_trait>(&'life0 Self, KeyTypeId,\n                                   Vec<CryptoTypePublicPair>, &'life1 [u8])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<Vec<Result<Option<Vec<u8>>, Error>>, ()>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Sign with all keys","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: let_unit_value, clippy :: type_complexity, clippy ::\n        type_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6352,"byte_end":6368,"line_start":191,"line_end":191,"column_start":11,"column_end":27},"name":"sr25519_vrf_sign","qualname":"::CryptoStore::sr25519_vrf_sign","value":"pub fn sr25519_vrf_sign<'life0, 'life1,\n                        'async_trait>(&'life0 Self, KeyTypeId,\n                                      &'life1 sr25519::Public,\n                                      VRFTranscriptData)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                         Result<Option<VRFSignature>, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Generate VRF signature for given transcript data.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1514,"byte_end":1528,"line_start":49,"line_end":49,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":174},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6998,"byte_end":7013,"line_start":207,"line_end":207,"column_start":11,"column_end":26},"name":"SyncCryptoStore","qualname":"::SyncCryptoStore","value":"SyncCryptoStore: CryptoStore + Send + Sync","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190}],"decl_id":null,"docs":" Sync version of the CryptoStore","sig":null,"attributes":[{"value":"/ Sync version of the CryptoStore","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6514,"byte_end":6549,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6550,"byte_end":6553,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Some parts of Substrate still rely on a sync version of the `CryptoStore`.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6554,"byte_end":6632,"line_start":201,"line_end":201,"column_start":1,"column_end":79}},{"value":"/ To make the transition easier this auto trait wraps any async `CryptoStore` and","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6633,"byte_end":6716,"line_start":202,"line_end":202,"column_start":1,"column_end":84}},{"value":"/ exposes a `sync` interface using `block_on`. Usage of this is deprecated and it","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6717,"byte_end":6800,"line_start":203,"line_end":203,"column_start":1,"column_end":84}},{"value":"/ will be removed as soon as the internal usage has transitioned successfully.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6801,"byte_end":6881,"line_start":204,"line_end":204,"column_start":1,"column_end":81}},{"value":"/ If you are starting out building something new **do not use this**,","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6882,"byte_end":6953,"line_start":205,"line_end":205,"column_start":1,"column_end":72}},{"value":"/ instead, use [`CryptoStore`].","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":6954,"byte_end":6987,"line_start":206,"line_end":206,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7108,"byte_end":7127,"line_start":209,"line_end":209,"column_start":5,"column_end":24},"name":"sr25519_public_keys","qualname":"::SyncCryptoStore::sr25519_public_keys","value":"pub fn sr25519_public_keys(&Self, KeyTypeId) -> Vec<sr25519::Public>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Returns all sr25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all sr25519 public keys for the given key type.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7044,"byte_end":7103,"line_start":208,"line_end":208,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7408,"byte_end":7428,"line_start":216,"line_end":216,"column_start":5,"column_end":25},"name":"sr25519_generate_new","qualname":"::SyncCryptoStore::sr25519_generate_new","value":"pub fn sr25519_generate_new(&Self, KeyTypeId, Option<&str>)\n-> Result<sr25519::Public, Error>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Generate a new sr25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new sr25519 key pair for the given key type and an optional seed.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7177,"byte_end":7257,"line_start":211,"line_end":211,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7259,"byte_end":7262,"line_start":212,"line_end":212,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7264,"byte_end":7343,"line_start":213,"line_end":213,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7345,"byte_end":7348,"line_start":214,"line_end":214,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7350,"byte_end":7403,"line_start":215,"line_end":215,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7582,"byte_end":7601,"line_start":223,"line_end":223,"column_start":5,"column_end":24},"name":"ed25519_public_keys","qualname":"::SyncCryptoStore::ed25519_public_keys","value":"pub fn ed25519_public_keys(&Self, KeyTypeId) -> Vec<ed25519::Public>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Returns all ed25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all ed25519 public keys for the given key type.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7518,"byte_end":7577,"line_start":222,"line_end":222,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7882,"byte_end":7902,"line_start":230,"line_end":230,"column_start":5,"column_end":25},"name":"ed25519_generate_new","qualname":"::SyncCryptoStore::ed25519_generate_new","value":"pub fn ed25519_generate_new(&Self, KeyTypeId, Option<&str>)\n-> Result<ed25519::Public, Error>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Generate a new ed25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new ed25519 key pair for the given key type and an optional seed.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7651,"byte_end":7731,"line_start":225,"line_end":225,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7733,"byte_end":7736,"line_start":226,"line_end":226,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7738,"byte_end":7817,"line_start":227,"line_end":227,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7819,"byte_end":7822,"line_start":228,"line_end":228,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7824,"byte_end":7877,"line_start":229,"line_end":229,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8054,"byte_end":8071,"line_start":237,"line_end":237,"column_start":5,"column_end":22},"name":"ecdsa_public_keys","qualname":"::SyncCryptoStore::ecdsa_public_keys","value":"pub fn ecdsa_public_keys(&Self, KeyTypeId) -> Vec<ecdsa::Public>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Returns all ecdsa public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all ecdsa public keys for the given key type.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7992,"byte_end":8049,"line_start":236,"line_end":236,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8348,"byte_end":8366,"line_start":244,"line_end":244,"column_start":5,"column_end":23},"name":"ecdsa_generate_new","qualname":"::SyncCryptoStore::ecdsa_generate_new","value":"pub fn ecdsa_generate_new(&Self, KeyTypeId, Option<&str>)\n-> Result<ecdsa::Public, Error>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Generate a new ecdsa key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new ecdsa key pair for the given key type and an optional seed.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8119,"byte_end":8197,"line_start":239,"line_end":239,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8199,"byte_end":8202,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8204,"byte_end":8283,"line_start":241,"line_end":241,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8285,"byte_end":8288,"line_start":242,"line_end":242,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8290,"byte_end":8343,"line_start":243,"line_end":243,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8717,"byte_end":8731,"line_start":256,"line_end":256,"column_start":5,"column_end":19},"name":"insert_unknown","qualname":"::SyncCryptoStore::insert_unknown","value":"pub fn insert_unknown(&Self, KeyTypeId, &str, &[u8]) -> Result<(), ()>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Insert a new key. This doesn't require any known of the crypto; but a public key must be\n manually provided.","sig":null,"attributes":[{"value":"/ Insert a new key. This doesn't require any known of the crypto; but a public key must be","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8454,"byte_end":8546,"line_start":250,"line_end":250,"column_start":2,"column_end":94}},{"value":"/ manually provided.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8548,"byte_end":8570,"line_start":251,"line_end":251,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8572,"byte_end":8575,"line_start":252,"line_end":252,"column_start":2,"column_end":5}},{"value":"/ Places it into the file system store.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8577,"byte_end":8618,"line_start":253,"line_end":253,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8620,"byte_end":8623,"line_start":254,"line_end":254,"column_start":2,"column_end":5}},{"value":"/ `Err` if there's some sort of weird filesystem error, but should generally be `Ok`.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8625,"byte_end":8712,"line_start":255,"line_end":255,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9021,"byte_end":9035,"line_start":262,"line_end":262,"column_start":5,"column_end":19},"name":"supported_keys","qualname":"::SyncCryptoStore::supported_keys","value":"pub fn supported_keys(&Self, KeyTypeId, Vec<CryptoTypePublicPair>)\n-> Result<Vec<CryptoTypePublicPair>, Error>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Find intersection between provided keys and supported keys","sig":null,"attributes":[{"value":"/ Find intersection between provided keys and supported keys","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8808,"byte_end":8870,"line_start":258,"line_end":258,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8872,"byte_end":8875,"line_start":259,"line_end":259,"column_start":2,"column_end":5}},{"value":"/ Provided a list of (CryptoTypeId,[u8]) pairs, this would return","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8877,"byte_end":8944,"line_start":260,"line_end":260,"column_start":2,"column_end":69}},{"value":"/ a filtered set of public keys which are supported by the keystore.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":8946,"byte_end":9016,"line_start":261,"line_end":261,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9239,"byte_end":9243,"line_start":271,"line_end":271,"column_start":5,"column_end":9},"name":"keys","qualname":"::SyncCryptoStore::keys","value":"pub fn keys(&Self, KeyTypeId) -> Result<Vec<CryptoTypePublicPair>, Error>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" List all supported keys","sig":null,"attributes":[{"value":"/ List all supported keys","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9147,"byte_end":9174,"line_start":268,"line_end":268,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9176,"byte_end":9179,"line_start":269,"line_end":269,"column_start":2,"column_end":5}},{"value":"/ Returns a set of public keys the signer supports.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9181,"byte_end":9234,"line_start":270,"line_end":270,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9512,"byte_end":9520,"line_start":278,"line_end":278,"column_start":5,"column_end":13},"name":"has_keys","qualname":"::SyncCryptoStore::has_keys","value":"pub fn has_keys(&Self, &[(Vec<u8>, KeyTypeId)]) -> bool","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Checks if the private keys for the given public key and key type combinations exist.","sig":null,"attributes":[{"value":"/ Checks if the private keys for the given public key and key type combinations exist.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9357,"byte_end":9445,"line_start":275,"line_end":275,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9447,"byte_end":9450,"line_start":276,"line_end":276,"column_start":2,"column_end":5}},{"value":"/ Returns `true` iff all private keys could be found.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9452,"byte_end":9507,"line_start":277,"line_end":277,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9836,"byte_end":9845,"line_start":287,"line_end":287,"column_start":5,"column_end":14},"name":"sign_with","qualname":"::SyncCryptoStore::sign_with","value":"pub fn sign_with(&Self, KeyTypeId, &CryptoTypePublicPair, &[u8])\n-> Result<Option<Vec<u8>>, Error>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Sign with key","sig":null,"attributes":[{"value":"/ Sign with key","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9577,"byte_end":9594,"line_start":280,"line_end":280,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9596,"byte_end":9599,"line_start":281,"line_end":281,"column_start":2,"column_end":5}},{"value":"/ Signs a message with the private key that matches","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9601,"byte_end":9654,"line_start":282,"line_end":282,"column_start":2,"column_end":55}},{"value":"/ the public key passed.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9656,"byte_end":9682,"line_start":283,"line_end":283,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9684,"byte_end":9687,"line_start":284,"line_end":284,"column_start":2,"column_end":5}},{"value":"/ Returns the SCALE encoded signature if key is found and supported, `None` if the key doesn't","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9689,"byte_end":9785,"line_start":285,"line_end":285,"column_start":2,"column_end":98}},{"value":"/ exist or an error when something failed.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9787,"byte_end":9831,"line_start":286,"line_end":286,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10224,"byte_end":10237,"line_start":301,"line_end":301,"column_start":5,"column_end":18},"name":"sign_with_any","qualname":"::SyncCryptoStore::sign_with_any","value":"pub fn sign_with_any(&Self, KeyTypeId, Vec<CryptoTypePublicPair>, &[u8])\n-> Result<Option<(CryptoTypePublicPair, Vec<u8>)>, Error>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Sign with any key","sig":null,"attributes":[{"value":"/ Sign with any key","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9957,"byte_end":9978,"line_start":294,"line_end":294,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9980,"byte_end":9983,"line_start":295,"line_end":295,"column_start":2,"column_end":5}},{"value":"/ Given a list of public keys, find the first supported key and","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":9985,"byte_end":10050,"line_start":296,"line_end":296,"column_start":2,"column_end":67}},{"value":"/ sign the provided message with that key.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10052,"byte_end":10096,"line_start":297,"line_end":297,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10098,"byte_end":10101,"line_start":298,"line_end":298,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the used key and the SCALE encoded signature or `None` if no key could","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10103,"byte_end":10196,"line_start":299,"line_end":299,"column_start":2,"column_end":95}},{"value":"/ be found to sign.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10198,"byte_end":10219,"line_start":300,"line_end":300,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11026,"byte_end":11039,"line_start":329,"line_end":329,"column_start":5,"column_end":18},"name":"sign_with_all","qualname":"::SyncCryptoStore::sign_with_all","value":"pub fn sign_with_all(&Self, KeyTypeId, Vec<CryptoTypePublicPair>, &[u8])\n-> Result<Vec<Result<Option<Vec<u8>>, Error>>, ()>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Sign with all keys","sig":null,"attributes":[{"value":"/ Sign with all keys","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10721,"byte_end":10743,"line_start":322,"line_end":322,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10745,"byte_end":10748,"line_start":323,"line_end":323,"column_start":2,"column_end":5}},{"value":"/ Provided a list of public keys, sign a message with","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10750,"byte_end":10805,"line_start":324,"line_end":324,"column_start":2,"column_end":57}},{"value":"/ each key given that the key is supported.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10807,"byte_end":10852,"line_start":325,"line_end":325,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10854,"byte_end":10857,"line_start":326,"line_end":326,"column_start":2,"column_end":5}},{"value":"/ Returns a list of `Result`s each representing the SCALE encoded","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10859,"byte_end":10926,"line_start":327,"line_end":327,"column_start":2,"column_end":69}},{"value":"/ signature of each key, `None` if the key doesn't exist or an error when something failed.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":10928,"byte_end":11021,"line_start":328,"line_end":328,"column_start":2,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11824,"byte_end":11840,"line_start":350,"line_end":350,"column_start":5,"column_end":21},"name":"sr25519_vrf_sign","qualname":"::SyncCryptoStore::sr25519_vrf_sign","value":"pub fn sr25519_vrf_sign(&Self, KeyTypeId, &sr25519::Public, VRFTranscriptData)\n-> Result<Option<VRFSignature>, Error>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Generate VRF signature for given transcript data.","sig":null,"attributes":[{"value":"/ Generate VRF signature for given transcript data.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11259,"byte_end":11312,"line_start":338,"line_end":338,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11314,"byte_end":11317,"line_start":339,"line_end":339,"column_start":2,"column_end":5}},{"value":"/ Receives KeyTypeId and Public key to be able to map","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11319,"byte_end":11374,"line_start":340,"line_end":340,"column_start":2,"column_end":57}},{"value":"/ them to a private key that exists in the keystore which","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11376,"byte_end":11435,"line_start":341,"line_end":341,"column_start":2,"column_end":61}},{"value":"/ is, in turn, used for signing the provided transcript.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11437,"byte_end":11495,"line_start":342,"line_end":342,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11497,"byte_end":11500,"line_start":343,"line_end":343,"column_start":2,"column_end":5}},{"value":"/ Returns a result containing the signature data.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11502,"byte_end":11553,"line_start":344,"line_end":344,"column_start":2,"column_end":53}},{"value":"/ Namely, VRFOutput and VRFProof which are returned","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11555,"byte_end":11608,"line_start":345,"line_end":345,"column_start":2,"column_end":55}},{"value":"/ inside the `VRFSignature` container struct.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11610,"byte_end":11657,"line_start":346,"line_end":346,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11659,"byte_end":11662,"line_start":347,"line_end":347,"column_start":2,"column_end":5}},{"value":"/ This function will return `None` if the given `key_type` and `public` combination","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11664,"byte_end":11749,"line_start":348,"line_end":348,"column_start":2,"column_end":87}},{"value":"/ doesn't exist in the keystore or an `Err` when something failed.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11751,"byte_end":11819,"line_start":349,"line_end":349,"column_start":2,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":191},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":12024,"byte_end":12042,"line_start":359,"line_end":359,"column_start":10,"column_end":28},"name":"SyncCryptoStorePtr","qualname":"::SyncCryptoStorePtr","value":"Arc<dyn SyncCryptoStore>","parent":null,"children":[],"decl_id":null,"docs":" A pointer to a keystore.\n","sig":null,"attributes":[{"value":"/ A pointer to a keystore.","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":11986,"byte_end":12014,"line_start":358,"line_end":358,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":12193,"byte_end":12204,"line_start":363,"line_end":363,"column_start":13,"column_end":24},"name":"KeystoreExt","qualname":"::KeystoreExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The keystore extension to register/retrieve from the externalities.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":13568,"byte_end":13576,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":14533,"byte_end":14541,"line_start":73,"line_end":73,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":201},{"krate":0,"index":205},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":228},{"krate":0,"index":234},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":16528,"byte_end":16536,"line_start":149,"line_end":149,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":21722,"byte_end":21730,"line_start":330,"line_end":330,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":21831,"byte_end":21839,"line_start":336,"line_end":336,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":714,"byte_end":721,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":731,"byte_end":734,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":119}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":13568,"byte_end":13576,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":14533,"byte_end":14541,"line_start":73,"line_end":73,"column_start":22,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":192},"to":{"krate":0,"index":296}},{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":16528,"byte_end":16536,"line_start":149,"line_end":149,"column_start":26,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":192},"to":{"krate":0,"index":174}},{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":21722,"byte_end":21730,"line_start":330,"line_end":330,"column_start":35,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/testing.rs","byte_start":21831,"byte_end":21839,"line_start":336,"line_end":336,"column_start":37,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1552,"byte_end":1556,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2832},"to":{"krate":0,"index":296}},{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":1559,"byte_end":1563,"line_start":50,"line_end":50,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2844},"to":{"krate":0,"index":296}},{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7015,"byte_end":7026,"line_start":207,"line_end":207,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":296},"to":{"krate":0,"index":174}},{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7029,"byte_end":7033,"line_start":207,"line_end":207,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2832},"to":{"krate":0,"index":174}},{"span":{"file_name":"/Users/hao/.cargo/git/checkouts/substrate-7e08433d4c370a21/70ef0af/primitives/keystore/src/lib.rs","byte_start":7036,"byte_end":7040,"line_start":207,"line_end":207,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2844},"to":{"krate":0,"index":174}}]}